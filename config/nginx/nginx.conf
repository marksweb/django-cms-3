user nginx;
worker_processes auto;
#worker_rlimit_nofile 8192;
pid /var/run/nginx.pid;

error_log /dev/stderr warn;

load_module modules/ngx_http_perl_module.so;

env NGINX_HOST;
env NGINX_PORT;
env DEV_MODE;

events {
    worker_connections 2048;
}

http {
    perl_set $upstream_host 'sub { return $ENV{"NGINX_HOST"}; }';
    perl_set $upstream_port 'sub { return $ENV{"NGINX_PORT"}; }';
    perl_set $dev_mode 'sub { return $ENV{"DEV_MODE"}; }';

    log_format ngx_combined '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $bytes_sent '
                            '"$http_referer" "$http_user_agent" nginx';

    access_log /dev/stdout ngx_combined;
    server_tokens off;

    # use dnsmasq installed in the container to resolve the backend host
    resolver 127.0.0.1;

    # look for client ip in the x-forwarded-for header
    real_ip_header X-Forwarded-For;

    # ignore trusted ips
    real_ip_recursive on;

    # trusted ip ranges...
    set_real_ip_from 172.16.0.0/12;  # vpc
    set_real_ip_from 127.0.0.0/8;    # well...

    include       mime.types;
    default_type  application/octet-stream;

    charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;
    keepalive_timeout 20;
    sendfile off;
    tcp_nopush on;

    map $http_upgrade $connection_upgrade {
        default     "upgrade";
        ""          "";
    }
    map $http_x_forwarded_proto $real_scheme {
        default     $http_x_forwarded_proto;
        ''          $scheme;
    }

    server {
        listen 80;

        gzip on;
        gzip_comp_level 4;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        client_max_body_size 20m;

        location /favicon.ico {
            alias /app/static-collection/project/images/favicon.ico;
        }

        location /static {
            alias /app/static-collection;
            add_header Access-Control-Allow-Origin "*";
        }

        location / {
            include uwsgi_params;

            uwsgi_pass          $upstream_host:$upstream_port;

            proxy_redirect      off;
            proxy_set_header    Connection          $connection_upgrade;
            proxy_set_header    Upgrade             $http_upgrade;
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host    $server_name;
        }
    }
}
